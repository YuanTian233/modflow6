# -*- coding: utf-8 -*-
"""
Created on Tue Aug  8 15:50:05 2023

@author: tian
"""
import numpy as np
import os
import math
import scipy.stats as stats
import pandas as pd
# model_output_path = os.getcwd()
# gm_mean = math.log(1e-5)  # ln(K) average --> constant
# gm_var = 1.0  # ln(K) variance --> constant



# prior = pd.read_csv((model_output_path + '/ref_output/parameter_sets.csv'), dtype=np.float64, header = 0, index_col = 0)
# # Get prior probability for each independent parameter value in each set
# prior_pdf_ind = stats.norm.pdf(prior, loc = gm_mean, scale = gm_var)
# # Get prior probability for each set
# prior_pdf_set = np.prod(prior_pdf_ind, axis=1)

# # # ------------------------------------------------------------------------------------------------------------------ #
# # # --------------------------------------- Get reference data-------------------------------------------------------- #
# # # ------------------------------------------------------------------------------------------------------------------ #
# # # Data to compare the surrogate model to
# h_ref = pd.read_csv((model_output_path + '/ref_output/waterhead.csv'), dtype=np.float64, header = 0, index_col = 0)
# c_ref = pd.read_csv((model_output_path + '/ref_output/concentration.csv'), dtype=np.float64, header = 0, index_col = 0)
# from testmc import add_noise

# # Measurement data:
# h_error = [0.06, 0.01]
# c_error = [0.06, 0.02]

# h_ref_output = add_noise(h_obs, h_error, ret_error=True)[0]
# c_ref_output = add_noise(c_obs, c_error, ret_error=True)[0]
# h_measurement_error = add_noise(h_obs, h_error, ret_error=True)[1]
# c_measurement_error = add_noise(c_obs, c_error, ret_error=True)[1]




# # model_predictions=ref_output, observations=observations, var=measurement_error**2,
# #                                       prior_pdf=prior_pdf_set, prior_samples=prior

# cov_mat = np.diag(var)
# likelihood = stats.multivariate_normal.pdf(model_predictions, 
#                                            cov=cov_mat, 
#                                            mean=observations[0, :])

data =np.array([
[4.604977899845560385e-01, 3.128914651207492792e-01, 7.647744924682374767e-01, 9.610164081650833801e-01, 5.995903325188020050e-01, 2.055652778861133956e-01, 9.335208211054644156e-01, 6.632872969158378762e-01, 4.233400729341126878e-01, 2.358929659998291739e-01, 6.054499349014251797e-01, 5.973264021326623041e-01, 5.906090554055885844e-02, 9.919152519704994564e-01, 4.157816340014952039e-01, -1.030682828248009539e-02, 7.093558899676109808e-02, 3.769523421245360439e-01, 1.085772442133953186e-01, 1.450094383033854739e-01],
[6.596407349861602709e-01, 2.274310025412056013e-01, 6.525678591263528450e-01, 1.027288098079379486e+00, 6.192207637558999611e-01, 1.373423670838222754e-01, 7.216170246510239528e-01, 6.818675723639839870e-01, 1.712646437047264936e-01, 2.376193148610454553e-01, 6.305266577927167715e-01, 6.246153969119666582e-01, 5.896773068290397934e-02, 1.004977986272527435e+00, 2.525096859775442515e-01, 3.415523037565476594e-02, 8.653067717973994544e-02, 3.140804895112542794e-01, 3.322958721130812032e-01, 1.645728835286875136e-01],
# [6.311091011981686538e-01, 2.473695632043023118e-01, 7.710329241004656442e-01, 1.000952625062082380e+00, 6.202171310572593965e-01, 1.549503691102864233e-01, 7.960780569186213240e-01, 6.610607015053983071e-01, 3.027302125094825103e-01, 2.299659765275698098e-01, 7.079051593803492581e-01, 6.711779780606146328e-01, 5.963478471674574927e-02, 1.016484105783349134e+00, 3.035036666642267900e-01, 3.181398662578124870e-02, 6.523345126861700150e-02, 4.395132413615791545e-01, 2.146583876464900342e-01, 1.591282092061094278e-01],
# [5.944092641211125017e-01, 3.654986663078592102e-01, 6.332672091424771388e-01, 9.739419545059061489e-01, 6.087362298960419249e-01, 1.118151128088336332e-01, 7.233371696341238666e-01, 6.809419029997358930e-01, 2.485635174150115090e-01, 2.278610558098730643e-01, 6.714427624469384570e-01, 6.889095829694918960e-01, 5.936444702835200898e-02, 1.001756840792099368e+00, 3.021893464567233512e-01, 7.013109854833455767e-03, 7.565546068722182882e-02, 4.469095265687393903e-01, 3.177370030897127551e-01, 1.682761571936602640e-01],
# [5.955280127880779872e-01, 3.243559660570854986e-01, 7.245668866085933635e-01, 9.856578279071874782e-01, 6.203037668906622448e-01, 2.565423882812527534e-01, 7.838174730757547781e-01, 6.525206821239357691e-01, 4.212312973006545613e-01, 2.400116264523803888e-01, 6.614737361705953500e-01, 6.583018346834844658e-01, 5.906067116774200987e-02, 9.888151691954150113e-01, 3.741563811546004814e-01, 1.243772054338459880e-02, 7.589008063073007793e-02, 3.894498109140026587e-01, 3.108947019338780260e-01, 1.649757941180008125e-01],
# [5.600488779919422511e-01, 3.348251544986718953e-01, 6.598297541405172550e-01, 1.025623196410037741e+00, 6.150335791931583751e-01, 1.430891390869403201e-01, 7.942408634338056217e-01, 6.896187742809977150e-01, 2.437415540927181656e-01, 2.363549083152953478e-01, 5.802981194301659595e-01, 6.867123173680820258e-01, 5.894122769409911033e-02, 9.994959247590342599e-01, 3.789102088376898880e-01, -3.979531503672471479e-03, 8.144014250335622485e-02, 3.653287359061542783e-01, 3.609919378384081057e-01, 1.812438562424764366e-01]
])
aa122 = np.cov(data.T)